# docker-compose.yml
version: '3.8'

services:
  web:
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
    networks:
      - my_network
    env_file:
      - .env
      - .env.production
    volumes:
      - /public/data:/app/public/data


  postgres:
    image: postgres:16-alpine
    container_name: merqam_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 20s
      timeout: 5s
      retries: 5
    networks:
      - my_network
  
  redis:
    image: redis:7-alpine
    container_name: mirqam_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: mirqam_worker
    volumes:
      - worker_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - my_network
    env_file:
      - .env
      - .env.production

volumes:
  postgres_data:      
  redis_data:
  worker_logs:
  temp_data:

networks:
  my_network:
    name: my_network
    driver: bridge